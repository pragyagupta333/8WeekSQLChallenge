SET SEARCH_PATH =PIZZA_RUNNER;

-- [A]
CREATE TEMP TABLE CUSTOMER_ORDERS_T AS 
	SELECT ORDER_ID, CUSTOMER_ID,PIZZA_ID,
		CASE 
			WHEN EXCLUSIONS ILIKE 'NULL' OR EXCLUSIONS ILIKE '' OR EXCLUSIONS IS NULL  THEN NULL
			ELSE EXCLUSIONS
		END AS EXCLUSIONS,
		
		CASE 
			WHEN EXTRAS ILIKE 'NULL' OR EXTRAS ILIKE '' OR EXTRAS IS NULL THEN NULL
			ELSE EXTRAS 
		END AS EXTRAS,
	ORDER_TIME
	FROM CUSTOMER_ORDERS;
	
-- [B]
CREATE TEMP TABLE RUNNER_ORDERS_T AS 
	SELECT ORDER_ID,RUNNER_ID,	
		CASE 
			WHEN PICKUP_TIME ILIKE 'NULL' THEN NULL
			ELSE PICKUP_TIME
		END AS PICKUP_TIME,
	
		CASE 
			WHEN DISTANCE ILIKE '%KM' THEN rtrim(distance,'km')
			WHEN DISTANCE ILIKE 'NULL' THEN NULL
			ELSE DISTANCE
		END AS DISTANCE,
		
		CASE 
			WHEN DURATION ILIKE '%MIN%' THEN rtrim(DURATION,'minutes')
			WHEN DURATION ILIKE 'NULL' THEN NULL
			ELSE DURATION
		END AS DURATION,
		
		CASE 
			WHEN CANCELLATION ILIKE 'NULL' OR CANCELLATION IS NULL OR CANCELLATION ILIKE '' THEN NULL
			ELSE CANCELLATION
			END AS CANCELLATION
	FROM RUNNER_ORDERS;
	
-- [C]			
ALTER TABLE RUNNER_ORDERS_T 
	ALTER COLUMN DISTANCE TYPE NUMERIC USING DISTANCE::NUMERIC,
	ALTER COLUMN DURATION TYPE INT USING DURATION::INT,
	ALTER COLUMN PICKUP_TIME TYPE timestamp WITHOUT TIME ZONE USING PICKUP_TIME::timestamp
-- 1
CREATE TEMP TABLE PIZZA_RECIPES_T AS 
	SELECT PIZZA_ID, 
			STRING_TO_TABLE(TOPPINGS,',')::INT AS TOPPING_ID
	FROM PIZZA_RECIPES
	
-- 2
ALTER TABLE CUSTOMER_ORDERS_T
	ADD COLUMN ROW_ID SERIAL;
ALTER TABLE RUNNER_ORDERS_T
	ADD COLUMN ROW_ID SERIAL;
-- 3
CREATE TEMP TABLE EXTRAS_SPLIT AS(
WITH CTE AS (
	SELECT ROW_ID,ORDER_ID,STRING_TO_TABLE(EXTRAS,',')::INT EXTRAS_ID
	FROM CUSTOMER_ORDERS_T CO
	)
SELECT * FROM CTE CO
JOIN PIZZA_TOPPINGS PT ON CO.EXTRAS_ID = PT.TOPPING_ID
)

DROP TABLE EXTRAS_SPLIT
DROP TABLE EXCLUSIONS_SPLIT
-- 4
CREATE TEMP TABLE EXCLUSIONS_SPLIT AS(
SELECT ROW_ID,ORDER_ID,STRING_TO_TABLE(EXCLUSIONS,',')::INT EXCLUSIONS_ID
FROM CUSTOMER_ORDERS_T 
)
------------------------------------ E. Bonus Questions --------------------------------------------------
/* QUE 1 : If Danny wants to expand his range of pizzas - how would this impact the existing data design? 
		   Write an INSERT statement to demonstrate what would happen 
		   if a new Supreme pizza with all the toppings was added to the Pizza Runner menu? */
-- ANS : 


BEGIN 
INSERT INTO PIZZA_NAMES VALUES(3,'Supreme pizza')
INSERT INTO PIZZA_RECIPES VALUES(3,'1,2,3,4,5,6,7,8,9,10,11,12')
ROLLBACK





