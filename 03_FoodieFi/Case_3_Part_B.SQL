SET search_path = foodie_fi;
SELECT * FROM PLANS
SELECT * FROM SUBSCRIPTIONS
------------------------------------ B. Data Analysis Questions  --------------------------------------------------
-- QUE 1 : How many customers has Foodie-Fi ever had?
-- ANS :

SELECT COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_CUSTOMERS
FROM SUBSCRIPTIONS

-- QUE 2 : What is the monthly distribution of trial plan start_date values for our dataset 
--		   use the start of the month as the group by value
-- ANS :

SELECT TO_CHAR(START_DATE,'month') AS MONTH, COUNT(START_DATE) TRIAL_COUNT
FROM SUBSCRIPTIONS S
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
WHERE PLAN_NAME ILIKE 'TRIAL'
GROUP BY 1
-- OR
SELECT  EXTRACT(MONTH FROM START_DATE) AS MONTH, COUNT(START_DATE) TRIAL_COUNT
FROM SUBSCRIPTIONS S
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
WHERE PLAN_NAME ILIKE 'TRIAL'
GROUP BY 1
ORDER BY 1

-- QUE 3 : What plan start_date values occur after the year 2020 for our dataset? 
--         Show the breakdown by count of events for each plan_name
-- ANS : 

SELECT PLAN_NAME,COUNT(PLAN_NAME)  PLAN_COUNT
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
WHERE START_DATE > '31-12-2020'
GROUP BY 1

-- QUE 4 :What is the customer count and percentage of customers who have churned rounded to 1 decimal place?
-- ANS : 

WITH CTE_COUNT AS(
SELECT 
	SUM(CASE WHEN PLAN_NAME ILIKE 'CHURN' THEN 1 ELSE 0 END ) AS CHURN_CUSTOMERS,
	COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_CUSTOMERS
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
)
SELECT ROUND((CHURN_CUSTOMERS*100/TOTAL_CUSTOMERS::DECIMAL),1)  AS CHURN_PERCENTAGE
FROM CTE_COUNT


-- QUE 5 : How many customers have churned straight after their initial free trial 
--		   what percentage is this rounded to the nearest whole number?
-- ANS :

WITH CHURN_CTE AS (
SELECT CUSTOMER_ID,
	CASE WHEN P.PLAN_NAME ILIKE 'TRIAL' AND LEAD(P.PLAN_NAME) OVER(PARTITION  BY CUSTOMER_ID ORDER BY START_DATE) ILIKE 'CHURN' THEN 1 ELSE 0 END AS CHURN
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
GROUP BY 1,P.PLAN_NAME,S.START_DATE
ORDER BY 1
)
SELECT SUM(CHURN) AS CHURNED_CUSTOMER,
ROUND(SUM(CHURN)*100/COUNT(DISTINCT CUSTOMER_ID)::DECIMAL,1) AS CHURNED_PERCENTAGE
FROM CHURN_CTE

-- VERIFCATION :  										  
SELECT *,LEAD(P.PLAN_NAME) OVER(PARTITION  BY CUSTOMER_ID ORDER BY START_DATE)											  
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID

-- QUE 6 : What is the number and percentage of customer plans after their initial free trial?
-- ANS : 
 WITH NEXT_PLAN_CTE AS (
	SELECT CUSTOMER_ID, 
		P.PLAN_NAME AS INITIAL_PLAN,
		LEAD(PLAN_NAME) OVER(PARTITION BY CUSTOMER_ID ORDER BY START_DATE) AS NEXT_PLAN
		FROM SUBSCRIPTIONS S
		JOIN PLANS P ON S.PLAN_ID = P.PLAN_ID 
),
TOTAL_CUSTOMER_CTE AS (
	SELECT COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_CUSTOMERS_COUNT
	FROM SUBSCRIPTIONS 
)
SELECT 
	NEXT_PLAN AS PLAN_AFFTER_TRIAL ,
	COUNT(NEXT_PLAN) AS CUSTOMER_COUNT_AFTER_TRIAL,
	ROUND( COUNT(NEXT_PLAN)*100/TOTAL_CUSTOMERS_COUNT::DECIMAL, 1) AS PERCENTAGE_CUSTOMER
FROM NEXT_PLAN_CTE,TOTAL_CUSTOMER_CTE
WHERE INITIAL_PLAN ILIKE 'TRIAL'
GROUP BY NEXT_PLAN,TOTAL_CUSTOMERS_COUNT
ORDER BY 2           

-- QUE 7 : What is the customer count and percentage breakdown of all 5 plan_name values at 2020-12-31?
-- ANS :
-- COUNT ONLY THE LATEST PLAN OF CUSTOMER WHICH IS ACTIVE ON 31 DEC 2020 
-- AS A BASIC MONTHLY PLAN ON 1 DEC CAN'T BE ACTIVE ON 31 DEC IF CUSTOMER MOVED TO PRO MONTHLY ON ANY DAY BEFORE 31 
-- => THEN THE ACTIVE PLAN WILL BE PRO MONTHLY AND NOT BASIC MONTHLY

-- "When customers upgrade their account from a basic plan to a pro or annual pro plan - the higher plan will take effect straightaway." 
--  -FROM WEBSITE

WITH PLANS_CTE AS (
SELECT CUSTOMER_ID,PLAN_NAME,START_DATE,
RANK() OVER(PARTITION BY CUSTOMER_ID ORDER BY START_DATE DESC) AS CURRENT_PLAN
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
WHERE START_DATE <= '2020-12-31'
),
TOTAL_CUSTOMER_CTE AS (
	SELECT COUNT(DISTINCT CUSTOMER_ID) AS TOTAL_CUSTOMERS_COUNT
	FROM SUBSCRIPTIONS 
)
SELECT 			
PLAN_NAME,COUNT(CURRENT_PLAN) AS CUSTOMER_COUNT,
ROUND(COUNT(CURRENT_PLAN)*100/TOTAL_CUSTOMERS_COUNT::DECIMAL,1) AS CUSTOMER_PERCENTAGE
FROM PLANS_CTE, TOTAL_CUSTOMER_CTE
WHERE CURRENT_PLAN = 1
GROUP BY PLAN_NAME, TOTAL_CUSTOMERS_COUNT
ORDER BY 2 DESC

-- QUE 8 : How many customers have upgraded to an annual plan in 2020?
-- ANS : 

SELECT COUNT(CUSTOMER_ID) AS 
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
WHERE PLAN_NAME ILIKE '%ANNUAL' AND START_DATE <= '2020-12-31'


-- QUE 9 : How many days on average does it take for a customer to an annual plan from the day they join Foodie-Fi?
-- ANS : 

WITH JOIN_CTE AS (
	SELECT CUSTOMER_ID,START_DATE AS JOIN_DATE
	FROM SUBSCRIPTIONS S 
	JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
	WHERE PLAN_NAME ILIKE 'TRIAL'
),

ANNUAL_CTE AS (
	SELECT CUSTOMER_ID,START_DATE AS ANNUAL_DATE
	FROM SUBSCRIPTIONS S 
	JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
	WHERE PLAN_NAME ILIKE '%ANNUAL'
)

SELECT AVG((ANNUAL_DATE - JOIN_DATE)::DECIMAL) AS DAYS_COUNT
FROM JOIN_CTE J
JOIN ANNUAL_CTE A
ON J.CUSTOMER_ID = A.CUSTOMER_ID


-- QUE 10 : Can you further breakdown this average value into 30 day periods (i.e. 0-30 days, 31-60 days etc)
-- ANS : 
/*
The PostgreSQL width_bucket() function returns the position of a specified operand in some specified buckets.
WIDTH_BUCKET( expression, min, max, buckets)
0-30
31-60....., 331-360 ARE BUCKETS WITH MIN VALUE 0 AND MAX VALUE 360 
(365 DAYS IN A YEAR, SO APPROX VALUE COULD ONLY BE 360)
TOTAL SUCH 12 BUCKETS WILL BE POSSIBLE.
*/

SELECT CUSTOMER_ID,PLAN_NAME,START_DATE 
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID

WITH JOIN_CTE AS (
	SELECT CUSTOMER_ID,START_DATE AS JOIN_DATE
	FROM SUBSCRIPTIONS S 
	JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
	WHERE PLAN_NAME ILIKE 'TRIAL'
),
ANNUAL_CTE AS (
	SELECT CUSTOMER_ID,START_DATE AS ANNUAL_DATE
	FROM SUBSCRIPTIONS S 
	JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
	WHERE PLAN_NAME ILIKE '%ANNUAL'
),
BUCKETS_CTE AS (
	SELECT  J.CUSTOMER_ID,ANNUAL_DATE - JOIN_DATE AS DAYS_COUNT, WIDTH_BUCKET(ANNUAL_DATE - JOIN_DATE, 0, 360, 12) AS BUCKET
	FROM JOIN_CTE J
	JOIN ANNUAL_CTE A
	ON J.CUSTOMER_ID = A.CUSTOMER_ID
)
SELECT (BUCKET-1)*30|| '-' || BUCKET*30 AS PERIODS,
COUNT(*)
FROM BUCKETS_CTE
GROUP BY BUCKET

-- QUE 11 : How many customers downgraded from a pro monthly to a basic monthly plan in 2020?
-- ANS :

WITH ANS AS(
SELECT CUSTOMER_ID, PLAN_NAME, START_DATE,
ROW_NUMBER() OVER(PARTITION BY CUSTOMER_ID ORDER BY START_DATE ) NUM
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
WHERE PLAN_NAME ILIKE 'BASIC MONTHLY' OR PLAN_NAME ILIKE 'PRO MONTHLY' 
)
SELECT COUNT(CUSTOMER_ID) AS CUSTOMER_COUNT
FROM ANS 
WHERE (NUM = 1 AND PLAN_NAME ILIKE 'PRO MONTHLY' ) AND (NUM = 2 AND PLAN_NAME ILIKE 'BASIC MONTHLY' )  
AND EXTRACT(YEAR FROM START_DATE)=2020
------------------------------------------ OR ----------------------------------------------------------
WITH CTE AS (
SELECT CUSTOMER_ID, PLAN_NAME AS INITIAL_PLAN,
LEAD(PLAN_NAME) OVER(PARTITION BY CUSTOMER_ID ORDER BY START_DATE) AS NEXT_PLAN
FROM SUBSCRIPTIONS S 
JOIN PLANS P ON P.PLAN_ID = S.PLAN_ID
)
SELECT COUNT(CUSTOMER_ID) AS CUSTOMER_COUNT
FROM CTE
WHERE INITIAL_PLAN ILIKE 'PRO MONTHLY' AND NEXT_PLAN ILIKE 'PRO MONTHLY' 
AND EXTRACT(YEAR FROM START_DATE)=2020





















